pipeline {
    agent any

    stages {
        stage('Pull Code') {
            steps {
                checkout scm
            }
        }
        stage('Download dependency') {
            steps {   
                sh 'cd project_dev-tools_frontend && rm -rf node_modules/'
                sh 'cd project_dev-tools_frontend && npm install'
            }
        }
        stage('Unit test') {
            steps {
                sh 'cd project_dev-tools_frontend && npm run test:unit'
//                 publishHTML target: [
//                         allowMissing: false,
//                         alwaysLinkToLastBuild: false,
//                         keepAll: true,
//                         reportDir: "./coverage/lcov-report",
//                         reportFiles: "index.html",
//                         reportName: 'Unit Test Coverage Report'
//                     ]

                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'coverage', reportFiles: 'index.html', reportName: 'Unit Test Report', reportTitles: 'Unit Test Report'])
            }
        }
        stage('Component test') {
            steps {
                sh 'cd project_dev-tools_frontend && npm run cypress:run'
                publishHTML target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: false,
                        keepAll: true,
                        reportDir: "./coverage/lcov-report",
                        reportFiles: "index.html",
                        reportName: 'Coverage Component Test Report'
                ]
                publishHTML target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: false,
                        keepAll: true,
                        reportDir: "./coverage",
                        reportFiles: "report.html",
                        reportName: 'Component Test Report'
                ]
            }
        }
        stage("Code coverage report") {
            steps {
                clover(cloverReportDir: 'project_dev-tools_frontend/coverage', cloverReportFileName: 'clover.xml',
                    healthyTarget: [methodCoverage: 70, conditionalCoverage: 80, statementCoverage: 80],
                    unhealthyTarget: [methodCoverage: 50, conditionalCoverage: 50, statementCoverage: 50],
                    failingTarget: [methodCoverage: 0, conditionalCoverage: 0, statementCoverage: 0]
                )
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploy'
            }
        }
    }
}
