{"remainingRequest":"D:\\SoftwareDev\\project-sw-dex-and-env\\project_dev-tools_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SoftwareDev\\project-sw-dex-and-env\\project_dev-tools_frontend\\src\\views\\Tasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SoftwareDev\\project-sw-dex-and-env\\project_dev-tools_frontend\\src\\views\\Tasks.vue","mtime":1644736793513},{"path":"D:\\SoftwareDev\\project-sw-dex-and-env\\project_dev-tools_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SoftwareDev\\project-sw-dex-and-env\\project_dev-tools_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\SoftwareDev\\project-sw-dex-and-env\\project_dev-tools_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SoftwareDev\\project-sw-dex-and-env\\project_dev-tools_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBhcGkgfSBmcm9tICcuLi9oZWxwZXJzL0hlbHBlcnMnOw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAndGFza3MnLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICB0YXNrczogW10NCiAgICB9Ow0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgb25EZXN0cm95KGlkKSB7DQogICAgICBjb25zdCBzdXJlID0gd2luZG93LmNvbmZpcm0oJ0FyZSB5b3Ugc3VyZT8nKTsNCiAgICAgIGlmICghc3VyZSkgcmV0dXJuOw0KICAgICAgYXdhaXQgYXBpLmRlbGV0ZXRhc2soaWQpOw0KICAgICAgdGhpcy5mbGFzaCgnUmVjb3JkIGRlbGV0ZWQgc3VjZXNzZnVsbHkhJywgJ3N1Y2Nlc3MnKTsNCiAgICAgIGNvbnN0IG5ld3Rhc2tzID0gdGhpcy50YXNrcy5maWx0ZXIodGFzayA9PiB0YXNrLl9pZCAhPT0gaWQpOw0KICAgICAgdGhpcy50YXNrcyA9IG5ld3Rhc2tzOw0KICAgIH0NCiAgfSwNCiAgYXN5bmMgbW91bnRlZCgpIHsNCiAgICB0aGlzLnRhc2tzID0gYXdhaXQgYXBpLmdldHRhc2tzKCk7DQogIH0NCn07DQo="},{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tasks.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <h1>Record</h1>\r\n    <flash-message></flash-message>\r\n    <div v-if=\"tasks.length > 0\">\r\n    <table id=\"tasks\" class=\"ui celled compact table\">\r\n      <thead>\r\n        <tr>\r\n            <th><i class=\"calendar icon\"></i>Date & Time</th>\r\n            <th><i class=\"bitcoin icon\"></i>Symbol</th>\r\n            <th><i class=\"arrow alternate circle left icon\"></i>Entry</th>\r\n            <th><i class=\"dollar sign icon\"></i>Profit/Loss</th>\r\n            <th><i class=\"book icon\"></i>Note</th>\r\n            \r\n            <th><i class=\"lock open icon\"></i></th>\r\n            <th><i class=\"edit icon\"></i></th>\r\n            <th><i class=\"trash icon\"></i></th>\r\n        </tr>\r\n      </thead>\r\n      <tr v-for=\"(task, i) in tasks\" :key=\"i\">\r\n        <td>{{ task.task1 }}</td>\r\n        <td>{{ task.task2 }}</td>\r\n        <td>{{ task.task3 }}</td>\r\n        <td>{{ task.task4 }}</td>\r\n        <td>{{ task.task5 }}</td>\r\n        <td width=\"75\" class=\"center aligned\">\r\n          <router-link :to=\"{ name: 'show', params: { id: task._id }}\">Show</router-link>\r\n        </td>\r\n        <td width=\"75\" class=\"center aligned\">\r\n          <router-link :to=\"{ name: 'edit', params: { id: task._id }}\">Edit</router-link>\r\n        </td>\r\n        <td width=\"75\" class=\"center aligned\" @click.prevent=\"onDestroy(task._id)\">\r\n          <a :href=\"`/tasks/${task._id}`\">Delete</a>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    </div>\r\n    <div v-else>\r\n        You don't have any record!.\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { api } from '../helpers/Helpers';\r\nexport default {\r\n  name: 'tasks',\r\n  data() {\r\n    return {\r\n      tasks: []\r\n    };\r\n  },\r\n  methods: {\r\n    async onDestroy(id) {\r\n      const sure = window.confirm('Are you sure?');\r\n      if (!sure) return;\r\n      await api.deletetask(id);\r\n      this.flash('Record deleted sucessfully!', 'success');\r\n      const newtasks = this.tasks.filter(task => task._id !== id);\r\n      this.tasks = newtasks;\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.tasks = await api.gettasks();\r\n  }\r\n};\r\n</script>"]}]}